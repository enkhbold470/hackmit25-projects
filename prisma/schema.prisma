// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id          String   @id @default(uuid())
  externalId  String   @unique
  dateTime    DateTime
  url         String
  orderStatus String
  subTotal    Float
  total       Float
  currency    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  paymentMethods   PaymentMethod[]
  priceAdjustments PriceAdjustment[]
  orderProducts    OrderProduct[]
}

model PaymentMethod {
  id                String  @id @default(uuid())
  externalId        String
  type              String
  brand             String?
  lastFour          String?
  transactionAmount String
  orderId           String

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model PriceAdjustment {
  id      String @id @default(uuid())
  type    String
  label   String
  amount  Float
  orderId String

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Product {
  id         String   @id @default(uuid())
  externalId String   @unique
  name       String
  url        String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  orderProducts OrderProduct[]
  eligibilities ProductEligibility[]
}

model OrderProduct {
  id        String @id @default(uuid())
  quantity  Float
  subTotal  Float
  total     Float
  currency  String
  unitPrice Float
  orderId   String
  productId String

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([orderId, productId])
}

model ProductEligibility {
  id          String @id @default(uuid())
  eligibility String
  productId   String

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, eligibility])
}

model Transaction {
  id        String   @id @default(uuid())
  amount    Int
  currency  String
  direction String
  metadata  Json
  source    String
  timestamp DateTime @default(now())
}
